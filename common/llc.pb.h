// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: llc.proto

#ifndef PROTOBUF_llc_2eproto__INCLUDED
#define PROTOBUF_llc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "protocol.pb.h"
// @@protoc_insertion_point(includes)

namespace OstProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_llc_2eproto();
void protobuf_AssignDesc_llc_2eproto();
void protobuf_ShutdownFile_llc_2eproto();

class Llc;

// ===================================================================

class Llc : public ::google::protobuf::Message {
 public:
  Llc();
  virtual ~Llc();
  
  Llc(const Llc& from);
  
  inline Llc& operator=(const Llc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Llc& default_instance();
  
  void Swap(Llc* other);
  
  // implements Message ----------------------------------------------
  
  Llc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Llc& from);
  void MergeFrom(const Llc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool is_override_dsap = 4;
  inline bool has_is_override_dsap() const;
  inline void clear_is_override_dsap();
  static const int kIsOverrideDsapFieldNumber = 4;
  inline bool is_override_dsap() const;
  inline void set_is_override_dsap(bool value);
  
  // optional bool is_override_ssap = 5;
  inline bool has_is_override_ssap() const;
  inline void clear_is_override_ssap();
  static const int kIsOverrideSsapFieldNumber = 5;
  inline bool is_override_ssap() const;
  inline void set_is_override_ssap(bool value);
  
  // optional bool is_override_ctl = 6;
  inline bool has_is_override_ctl() const;
  inline void clear_is_override_ctl();
  static const int kIsOverrideCtlFieldNumber = 6;
  inline bool is_override_ctl() const;
  inline void set_is_override_ctl(bool value);
  
  // optional uint32 dsap = 1;
  inline bool has_dsap() const;
  inline void clear_dsap();
  static const int kDsapFieldNumber = 1;
  inline ::google::protobuf::uint32 dsap() const;
  inline void set_dsap(::google::protobuf::uint32 value);
  
  // optional uint32 ssap = 2;
  inline bool has_ssap() const;
  inline void clear_ssap();
  static const int kSsapFieldNumber = 2;
  inline ::google::protobuf::uint32 ssap() const;
  inline void set_ssap(::google::protobuf::uint32 value);
  
  // optional uint32 ctl = 3;
  inline bool has_ctl() const;
  inline void clear_ctl();
  static const int kCtlFieldNumber = 3;
  inline ::google::protobuf::uint32 ctl() const;
  inline void set_ctl(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:OstProto.Llc)
 private:
  inline void set_has_is_override_dsap();
  inline void clear_has_is_override_dsap();
  inline void set_has_is_override_ssap();
  inline void clear_has_is_override_ssap();
  inline void set_has_is_override_ctl();
  inline void clear_has_is_override_ctl();
  inline void set_has_dsap();
  inline void clear_has_dsap();
  inline void set_has_ssap();
  inline void clear_has_ssap();
  inline void set_has_ctl();
  inline void clear_has_ctl();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_override_dsap_;
  bool is_override_ssap_;
  bool is_override_ctl_;
  ::google::protobuf::uint32 dsap_;
  ::google::protobuf::uint32 ssap_;
  ::google::protobuf::uint32 ctl_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_llc_2eproto();
  friend void protobuf_AssignDesc_llc_2eproto();
  friend void protobuf_ShutdownFile_llc_2eproto();
  
  void InitAsDefaultInstance();
  static Llc* default_instance_;
};
// ===================================================================

static const int kLlcFieldNumber = 202;
extern ::google::protobuf::internal::ExtensionIdentifier< ::OstProto::Protocol,
    ::google::protobuf::internal::MessageTypeTraits< ::OstProto::Llc >, 11, false >
  llc;

// ===================================================================

// Llc

// optional bool is_override_dsap = 4;
inline bool Llc::has_is_override_dsap() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Llc::set_has_is_override_dsap() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Llc::clear_has_is_override_dsap() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Llc::clear_is_override_dsap() {
  is_override_dsap_ = false;
  clear_has_is_override_dsap();
}
inline bool Llc::is_override_dsap() const {
  return is_override_dsap_;
}
inline void Llc::set_is_override_dsap(bool value) {
  set_has_is_override_dsap();
  is_override_dsap_ = value;
}

// optional bool is_override_ssap = 5;
inline bool Llc::has_is_override_ssap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Llc::set_has_is_override_ssap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Llc::clear_has_is_override_ssap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Llc::clear_is_override_ssap() {
  is_override_ssap_ = false;
  clear_has_is_override_ssap();
}
inline bool Llc::is_override_ssap() const {
  return is_override_ssap_;
}
inline void Llc::set_is_override_ssap(bool value) {
  set_has_is_override_ssap();
  is_override_ssap_ = value;
}

// optional bool is_override_ctl = 6;
inline bool Llc::has_is_override_ctl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Llc::set_has_is_override_ctl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Llc::clear_has_is_override_ctl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Llc::clear_is_override_ctl() {
  is_override_ctl_ = false;
  clear_has_is_override_ctl();
}
inline bool Llc::is_override_ctl() const {
  return is_override_ctl_;
}
inline void Llc::set_is_override_ctl(bool value) {
  set_has_is_override_ctl();
  is_override_ctl_ = value;
}

// optional uint32 dsap = 1;
inline bool Llc::has_dsap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Llc::set_has_dsap() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Llc::clear_has_dsap() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Llc::clear_dsap() {
  dsap_ = 0u;
  clear_has_dsap();
}
inline ::google::protobuf::uint32 Llc::dsap() const {
  return dsap_;
}
inline void Llc::set_dsap(::google::protobuf::uint32 value) {
  set_has_dsap();
  dsap_ = value;
}

// optional uint32 ssap = 2;
inline bool Llc::has_ssap() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Llc::set_has_ssap() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Llc::clear_has_ssap() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Llc::clear_ssap() {
  ssap_ = 0u;
  clear_has_ssap();
}
inline ::google::protobuf::uint32 Llc::ssap() const {
  return ssap_;
}
inline void Llc::set_ssap(::google::protobuf::uint32 value) {
  set_has_ssap();
  ssap_ = value;
}

// optional uint32 ctl = 3;
inline bool Llc::has_ctl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Llc::set_has_ctl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Llc::clear_has_ctl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Llc::clear_ctl() {
  ctl_ = 0u;
  clear_has_ctl();
}
inline ::google::protobuf::uint32 Llc::ctl() const {
  return ctl_;
}
inline void Llc::set_ctl(::google::protobuf::uint32 value) {
  set_has_ctl();
  ctl_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_llc_2eproto__INCLUDED
