// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snap.proto

#ifndef PROTOBUF_snap_2eproto__INCLUDED
#define PROTOBUF_snap_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "protocol.pb.h"
// @@protoc_insertion_point(includes)

namespace OstProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_snap_2eproto();
void protobuf_AssignDesc_snap_2eproto();
void protobuf_ShutdownFile_snap_2eproto();

class Snap;

// ===================================================================

class Snap : public ::google::protobuf::Message {
 public:
  Snap();
  virtual ~Snap();
  
  Snap(const Snap& from);
  
  inline Snap& operator=(const Snap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Snap& default_instance();
  
  void Swap(Snap* other);
  
  // implements Message ----------------------------------------------
  
  Snap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Snap& from);
  void MergeFrom(const Snap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool is_override_oui = 3;
  inline bool has_is_override_oui() const;
  inline void clear_is_override_oui();
  static const int kIsOverrideOuiFieldNumber = 3;
  inline bool is_override_oui() const;
  inline void set_is_override_oui(bool value);
  
  // optional bool is_override_type = 4;
  inline bool has_is_override_type() const;
  inline void clear_is_override_type();
  static const int kIsOverrideTypeFieldNumber = 4;
  inline bool is_override_type() const;
  inline void set_is_override_type(bool value);
  
  // optional uint32 oui = 1;
  inline bool has_oui() const;
  inline void clear_oui();
  static const int kOuiFieldNumber = 1;
  inline ::google::protobuf::uint32 oui() const;
  inline void set_oui(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:OstProto.Snap)
 private:
  inline void set_has_is_override_oui();
  inline void clear_has_is_override_oui();
  inline void set_has_is_override_type();
  inline void clear_has_is_override_type();
  inline void set_has_oui();
  inline void clear_has_oui();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_override_oui_;
  bool is_override_type_;
  ::google::protobuf::uint32 oui_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_snap_2eproto();
  friend void protobuf_AssignDesc_snap_2eproto();
  friend void protobuf_ShutdownFile_snap_2eproto();
  
  void InitAsDefaultInstance();
  static Snap* default_instance_;
};
// ===================================================================

static const int kSnapFieldNumber = 203;
extern ::google::protobuf::internal::ExtensionIdentifier< ::OstProto::Protocol,
    ::google::protobuf::internal::MessageTypeTraits< ::OstProto::Snap >, 11, false >
  snap;

// ===================================================================

// Snap

// optional bool is_override_oui = 3;
inline bool Snap::has_is_override_oui() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Snap::set_has_is_override_oui() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Snap::clear_has_is_override_oui() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Snap::clear_is_override_oui() {
  is_override_oui_ = false;
  clear_has_is_override_oui();
}
inline bool Snap::is_override_oui() const {
  return is_override_oui_;
}
inline void Snap::set_is_override_oui(bool value) {
  set_has_is_override_oui();
  is_override_oui_ = value;
}

// optional bool is_override_type = 4;
inline bool Snap::has_is_override_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Snap::set_has_is_override_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Snap::clear_has_is_override_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Snap::clear_is_override_type() {
  is_override_type_ = false;
  clear_has_is_override_type();
}
inline bool Snap::is_override_type() const {
  return is_override_type_;
}
inline void Snap::set_is_override_type(bool value) {
  set_has_is_override_type();
  is_override_type_ = value;
}

// optional uint32 oui = 1;
inline bool Snap::has_oui() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Snap::set_has_oui() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Snap::clear_has_oui() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Snap::clear_oui() {
  oui_ = 0u;
  clear_has_oui();
}
inline ::google::protobuf::uint32 Snap::oui() const {
  return oui_;
}
inline void Snap::set_oui(::google::protobuf::uint32 value) {
  set_has_oui();
  oui_ = value;
}

// optional uint32 type = 2;
inline bool Snap::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Snap::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Snap::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Snap::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Snap::type() const {
  return type_;
}
inline void Snap::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_snap_2eproto__INCLUDED
