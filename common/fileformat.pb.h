// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fileformat.proto

#ifndef PROTOBUF_fileformat_2eproto__INCLUDED
#define PROTOBUF_fileformat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "protocol.pb.h"
// @@protoc_insertion_point(includes)

namespace OstProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fileformat_2eproto();
void protobuf_AssignDesc_fileformat_2eproto();
void protobuf_ShutdownFile_fileformat_2eproto();

class FileMetaData;
class FileContentMatter;
class File;
class FileMagic;
class FileMeta;
class FileContent;
class FileChecksum;

enum FileType {
  kReservedFileType = 0,
  kStreamsFileType = 1
};
bool FileType_IsValid(int value);
const FileType FileType_MIN = kReservedFileType;
const FileType FileType_MAX = kStreamsFileType;
const int FileType_ARRAYSIZE = FileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileType_descriptor();
inline const ::std::string& FileType_Name(FileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileType_descriptor(), value);
}
inline bool FileType_Parse(
    const ::std::string& name, FileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileType>(
    FileType_descriptor(), name, value);
}
// ===================================================================

class FileMetaData : public ::google::protobuf::Message {
 public:
  FileMetaData();
  virtual ~FileMetaData();
  
  FileMetaData(const FileMetaData& from);
  
  inline FileMetaData& operator=(const FileMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileMetaData& default_instance();
  
  void Swap(FileMetaData* other);
  
  // implements Message ----------------------------------------------
  
  FileMetaData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileMetaData& from);
  void MergeFrom(const FileMetaData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .OstProto.FileType file_type = 1;
  inline bool has_file_type() const;
  inline void clear_file_type();
  static const int kFileTypeFieldNumber = 1;
  inline OstProto::FileType file_type() const;
  inline void set_file_type(OstProto::FileType value);
  
  // required uint32 format_version_major = 2;
  inline bool has_format_version_major() const;
  inline void clear_format_version_major();
  static const int kFormatVersionMajorFieldNumber = 2;
  inline ::google::protobuf::uint32 format_version_major() const;
  inline void set_format_version_major(::google::protobuf::uint32 value);
  
  // required uint32 format_version_minor = 3;
  inline bool has_format_version_minor() const;
  inline void clear_format_version_minor();
  static const int kFormatVersionMinorFieldNumber = 3;
  inline ::google::protobuf::uint32 format_version_minor() const;
  inline void set_format_version_minor(::google::protobuf::uint32 value);
  
  // required uint32 format_version_revision = 4;
  inline bool has_format_version_revision() const;
  inline void clear_format_version_revision();
  static const int kFormatVersionRevisionFieldNumber = 4;
  inline ::google::protobuf::uint32 format_version_revision() const;
  inline void set_format_version_revision(::google::protobuf::uint32 value);
  
  // required string generator_name = 5;
  inline bool has_generator_name() const;
  inline void clear_generator_name();
  static const int kGeneratorNameFieldNumber = 5;
  inline const ::std::string& generator_name() const;
  inline void set_generator_name(const ::std::string& value);
  inline void set_generator_name(const char* value);
  inline void set_generator_name(const char* value, size_t size);
  inline ::std::string* mutable_generator_name();
  inline ::std::string* release_generator_name();
  
  // required string generator_version = 6;
  inline bool has_generator_version() const;
  inline void clear_generator_version();
  static const int kGeneratorVersionFieldNumber = 6;
  inline const ::std::string& generator_version() const;
  inline void set_generator_version(const ::std::string& value);
  inline void set_generator_version(const char* value);
  inline void set_generator_version(const char* value, size_t size);
  inline ::std::string* mutable_generator_version();
  inline ::std::string* release_generator_version();
  
  // required string generator_revision = 7;
  inline bool has_generator_revision() const;
  inline void clear_generator_revision();
  static const int kGeneratorRevisionFieldNumber = 7;
  inline const ::std::string& generator_revision() const;
  inline void set_generator_revision(const ::std::string& value);
  inline void set_generator_revision(const char* value);
  inline void set_generator_revision(const char* value, size_t size);
  inline ::std::string* mutable_generator_revision();
  inline ::std::string* release_generator_revision();
  
  // @@protoc_insertion_point(class_scope:OstProto.FileMetaData)
 private:
  inline void set_has_file_type();
  inline void clear_has_file_type();
  inline void set_has_format_version_major();
  inline void clear_has_format_version_major();
  inline void set_has_format_version_minor();
  inline void clear_has_format_version_minor();
  inline void set_has_format_version_revision();
  inline void clear_has_format_version_revision();
  inline void set_has_generator_name();
  inline void clear_has_generator_name();
  inline void set_has_generator_version();
  inline void clear_has_generator_version();
  inline void set_has_generator_revision();
  inline void clear_has_generator_revision();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int file_type_;
  ::google::protobuf::uint32 format_version_major_;
  ::google::protobuf::uint32 format_version_minor_;
  ::google::protobuf::uint32 format_version_revision_;
  ::std::string* generator_name_;
  ::std::string* generator_version_;
  ::std::string* generator_revision_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileMetaData* default_instance_;
};
// -------------------------------------------------------------------

class FileContentMatter : public ::google::protobuf::Message {
 public:
  FileContentMatter();
  virtual ~FileContentMatter();
  
  FileContentMatter(const FileContentMatter& from);
  
  inline FileContentMatter& operator=(const FileContentMatter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileContentMatter& default_instance();
  
  void Swap(FileContentMatter* other);
  
  // implements Message ----------------------------------------------
  
  FileContentMatter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileContentMatter& from);
  void MergeFrom(const FileContentMatter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .OstProto.StreamConfigList streams = 1;
  inline bool has_streams() const;
  inline void clear_streams();
  static const int kStreamsFieldNumber = 1;
  inline const ::OstProto::StreamConfigList& streams() const;
  inline ::OstProto::StreamConfigList* mutable_streams();
  inline ::OstProto::StreamConfigList* release_streams();
  
  // @@protoc_insertion_point(class_scope:OstProto.FileContentMatter)
 private:
  inline void set_has_streams();
  inline void clear_has_streams();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::OstProto::StreamConfigList* streams_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileContentMatter* default_instance_;
};
// -------------------------------------------------------------------

class File : public ::google::protobuf::Message {
 public:
  File();
  virtual ~File();
  
  File(const File& from);
  
  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const File& default_instance();
  
  void Swap(File* other);
  
  // implements Message ----------------------------------------------
  
  File* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const File& from);
  void MergeFrom(const File& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes magic_value = 2;
  inline bool has_magic_value() const;
  inline void clear_magic_value();
  static const int kMagicValueFieldNumber = 2;
  inline const ::std::string& magic_value() const;
  inline void set_magic_value(const ::std::string& value);
  inline void set_magic_value(const char* value);
  inline void set_magic_value(const void* value, size_t size);
  inline ::std::string* mutable_magic_value();
  inline ::std::string* release_magic_value();
  
  // required .OstProto.FileMetaData meta_data = 3;
  inline bool has_meta_data() const;
  inline void clear_meta_data();
  static const int kMetaDataFieldNumber = 3;
  inline const ::OstProto::FileMetaData& meta_data() const;
  inline ::OstProto::FileMetaData* mutable_meta_data();
  inline ::OstProto::FileMetaData* release_meta_data();
  
  // optional .OstProto.FileContent content_matter = 9;
  inline bool has_content_matter() const;
  inline void clear_content_matter();
  static const int kContentMatterFieldNumber = 9;
  inline const ::OstProto::FileContent& content_matter() const;
  inline ::OstProto::FileContent* mutable_content_matter();
  inline ::OstProto::FileContent* release_content_matter();
  
  // required fixed32 checksum_value = 15;
  inline bool has_checksum_value() const;
  inline void clear_checksum_value();
  static const int kChecksumValueFieldNumber = 15;
  inline ::google::protobuf::uint32 checksum_value() const;
  inline void set_checksum_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:OstProto.File)
 private:
  inline void set_has_magic_value();
  inline void clear_has_magic_value();
  inline void set_has_meta_data();
  inline void clear_has_meta_data();
  inline void set_has_content_matter();
  inline void clear_has_content_matter();
  inline void set_has_checksum_value();
  inline void clear_has_checksum_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* magic_value_;
  ::OstProto::FileMetaData* meta_data_;
  ::OstProto::FileContent* content_matter_;
  ::google::protobuf::uint32 checksum_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static File* default_instance_;
};
// -------------------------------------------------------------------

class FileMagic : public ::google::protobuf::Message {
 public:
  FileMagic();
  virtual ~FileMagic();
  
  FileMagic(const FileMagic& from);
  
  inline FileMagic& operator=(const FileMagic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileMagic& default_instance();
  
  void Swap(FileMagic* other);
  
  // implements Message ----------------------------------------------
  
  FileMagic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileMagic& from);
  void MergeFrom(const FileMagic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:OstProto.FileMagic)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileMagic* default_instance_;
};
// -------------------------------------------------------------------

class FileMeta : public ::google::protobuf::Message {
 public:
  FileMeta();
  virtual ~FileMeta();
  
  FileMeta(const FileMeta& from);
  
  inline FileMeta& operator=(const FileMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileMeta& default_instance();
  
  void Swap(FileMeta* other);
  
  // implements Message ----------------------------------------------
  
  FileMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileMeta& from);
  void MergeFrom(const FileMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .OstProto.FileMetaData data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::OstProto::FileMetaData& data() const;
  inline ::OstProto::FileMetaData* mutable_data();
  inline ::OstProto::FileMetaData* release_data();
  
  // @@protoc_insertion_point(class_scope:OstProto.FileMeta)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::OstProto::FileMetaData* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileMeta* default_instance_;
};
// -------------------------------------------------------------------

class FileContent : public ::google::protobuf::Message {
 public:
  FileContent();
  virtual ~FileContent();
  
  FileContent(const FileContent& from);
  
  inline FileContent& operator=(const FileContent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileContent& default_instance();
  
  void Swap(FileContent* other);
  
  // implements Message ----------------------------------------------
  
  FileContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileContent& from);
  void MergeFrom(const FileContent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .OstProto.FileContentMatter matter = 9;
  inline bool has_matter() const;
  inline void clear_matter();
  static const int kMatterFieldNumber = 9;
  inline const ::OstProto::FileContentMatter& matter() const;
  inline ::OstProto::FileContentMatter* mutable_matter();
  inline ::OstProto::FileContentMatter* release_matter();
  
  // @@protoc_insertion_point(class_scope:OstProto.FileContent)
 private:
  inline void set_has_matter();
  inline void clear_has_matter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::OstProto::FileContentMatter* matter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileContent* default_instance_;
};
// -------------------------------------------------------------------

class FileChecksum : public ::google::protobuf::Message {
 public:
  FileChecksum();
  virtual ~FileChecksum();
  
  FileChecksum(const FileChecksum& from);
  
  inline FileChecksum& operator=(const FileChecksum& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileChecksum& default_instance();
  
  void Swap(FileChecksum* other);
  
  // implements Message ----------------------------------------------
  
  FileChecksum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileChecksum& from);
  void MergeFrom(const FileChecksum& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 value = 15;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 15;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:OstProto.FileChecksum)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fileformat_2eproto();
  friend void protobuf_AssignDesc_fileformat_2eproto();
  friend void protobuf_ShutdownFile_fileformat_2eproto();
  
  void InitAsDefaultInstance();
  static FileChecksum* default_instance_;
};
// ===================================================================


// ===================================================================

// FileMetaData

// required .OstProto.FileType file_type = 1;
inline bool FileMetaData::has_file_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileMetaData::set_has_file_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileMetaData::clear_has_file_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileMetaData::clear_file_type() {
  file_type_ = 0;
  clear_has_file_type();
}
inline OstProto::FileType FileMetaData::file_type() const {
  return static_cast< OstProto::FileType >(file_type_);
}
inline void FileMetaData::set_file_type(OstProto::FileType value) {
  GOOGLE_DCHECK(OstProto::FileType_IsValid(value));
  set_has_file_type();
  file_type_ = value;
}

// required uint32 format_version_major = 2;
inline bool FileMetaData::has_format_version_major() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileMetaData::set_has_format_version_major() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileMetaData::clear_has_format_version_major() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileMetaData::clear_format_version_major() {
  format_version_major_ = 0u;
  clear_has_format_version_major();
}
inline ::google::protobuf::uint32 FileMetaData::format_version_major() const {
  return format_version_major_;
}
inline void FileMetaData::set_format_version_major(::google::protobuf::uint32 value) {
  set_has_format_version_major();
  format_version_major_ = value;
}

// required uint32 format_version_minor = 3;
inline bool FileMetaData::has_format_version_minor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileMetaData::set_has_format_version_minor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileMetaData::clear_has_format_version_minor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileMetaData::clear_format_version_minor() {
  format_version_minor_ = 0u;
  clear_has_format_version_minor();
}
inline ::google::protobuf::uint32 FileMetaData::format_version_minor() const {
  return format_version_minor_;
}
inline void FileMetaData::set_format_version_minor(::google::protobuf::uint32 value) {
  set_has_format_version_minor();
  format_version_minor_ = value;
}

// required uint32 format_version_revision = 4;
inline bool FileMetaData::has_format_version_revision() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileMetaData::set_has_format_version_revision() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileMetaData::clear_has_format_version_revision() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileMetaData::clear_format_version_revision() {
  format_version_revision_ = 0u;
  clear_has_format_version_revision();
}
inline ::google::protobuf::uint32 FileMetaData::format_version_revision() const {
  return format_version_revision_;
}
inline void FileMetaData::set_format_version_revision(::google::protobuf::uint32 value) {
  set_has_format_version_revision();
  format_version_revision_ = value;
}

// required string generator_name = 5;
inline bool FileMetaData::has_generator_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileMetaData::set_has_generator_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileMetaData::clear_has_generator_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileMetaData::clear_generator_name() {
  if (generator_name_ != &::google::protobuf::internal::kEmptyString) {
    generator_name_->clear();
  }
  clear_has_generator_name();
}
inline const ::std::string& FileMetaData::generator_name() const {
  return *generator_name_;
}
inline void FileMetaData::set_generator_name(const ::std::string& value) {
  set_has_generator_name();
  if (generator_name_ == &::google::protobuf::internal::kEmptyString) {
    generator_name_ = new ::std::string;
  }
  generator_name_->assign(value);
}
inline void FileMetaData::set_generator_name(const char* value) {
  set_has_generator_name();
  if (generator_name_ == &::google::protobuf::internal::kEmptyString) {
    generator_name_ = new ::std::string;
  }
  generator_name_->assign(value);
}
inline void FileMetaData::set_generator_name(const char* value, size_t size) {
  set_has_generator_name();
  if (generator_name_ == &::google::protobuf::internal::kEmptyString) {
    generator_name_ = new ::std::string;
  }
  generator_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileMetaData::mutable_generator_name() {
  set_has_generator_name();
  if (generator_name_ == &::google::protobuf::internal::kEmptyString) {
    generator_name_ = new ::std::string;
  }
  return generator_name_;
}
inline ::std::string* FileMetaData::release_generator_name() {
  clear_has_generator_name();
  if (generator_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = generator_name_;
    generator_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string generator_version = 6;
inline bool FileMetaData::has_generator_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FileMetaData::set_has_generator_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FileMetaData::clear_has_generator_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FileMetaData::clear_generator_version() {
  if (generator_version_ != &::google::protobuf::internal::kEmptyString) {
    generator_version_->clear();
  }
  clear_has_generator_version();
}
inline const ::std::string& FileMetaData::generator_version() const {
  return *generator_version_;
}
inline void FileMetaData::set_generator_version(const ::std::string& value) {
  set_has_generator_version();
  if (generator_version_ == &::google::protobuf::internal::kEmptyString) {
    generator_version_ = new ::std::string;
  }
  generator_version_->assign(value);
}
inline void FileMetaData::set_generator_version(const char* value) {
  set_has_generator_version();
  if (generator_version_ == &::google::protobuf::internal::kEmptyString) {
    generator_version_ = new ::std::string;
  }
  generator_version_->assign(value);
}
inline void FileMetaData::set_generator_version(const char* value, size_t size) {
  set_has_generator_version();
  if (generator_version_ == &::google::protobuf::internal::kEmptyString) {
    generator_version_ = new ::std::string;
  }
  generator_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileMetaData::mutable_generator_version() {
  set_has_generator_version();
  if (generator_version_ == &::google::protobuf::internal::kEmptyString) {
    generator_version_ = new ::std::string;
  }
  return generator_version_;
}
inline ::std::string* FileMetaData::release_generator_version() {
  clear_has_generator_version();
  if (generator_version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = generator_version_;
    generator_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string generator_revision = 7;
inline bool FileMetaData::has_generator_revision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FileMetaData::set_has_generator_revision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FileMetaData::clear_has_generator_revision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FileMetaData::clear_generator_revision() {
  if (generator_revision_ != &::google::protobuf::internal::kEmptyString) {
    generator_revision_->clear();
  }
  clear_has_generator_revision();
}
inline const ::std::string& FileMetaData::generator_revision() const {
  return *generator_revision_;
}
inline void FileMetaData::set_generator_revision(const ::std::string& value) {
  set_has_generator_revision();
  if (generator_revision_ == &::google::protobuf::internal::kEmptyString) {
    generator_revision_ = new ::std::string;
  }
  generator_revision_->assign(value);
}
inline void FileMetaData::set_generator_revision(const char* value) {
  set_has_generator_revision();
  if (generator_revision_ == &::google::protobuf::internal::kEmptyString) {
    generator_revision_ = new ::std::string;
  }
  generator_revision_->assign(value);
}
inline void FileMetaData::set_generator_revision(const char* value, size_t size) {
  set_has_generator_revision();
  if (generator_revision_ == &::google::protobuf::internal::kEmptyString) {
    generator_revision_ = new ::std::string;
  }
  generator_revision_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileMetaData::mutable_generator_revision() {
  set_has_generator_revision();
  if (generator_revision_ == &::google::protobuf::internal::kEmptyString) {
    generator_revision_ = new ::std::string;
  }
  return generator_revision_;
}
inline ::std::string* FileMetaData::release_generator_revision() {
  clear_has_generator_revision();
  if (generator_revision_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = generator_revision_;
    generator_revision_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// FileContentMatter

// optional .OstProto.StreamConfigList streams = 1;
inline bool FileContentMatter::has_streams() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileContentMatter::set_has_streams() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileContentMatter::clear_has_streams() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileContentMatter::clear_streams() {
  if (streams_ != NULL) streams_->::OstProto::StreamConfigList::Clear();
  clear_has_streams();
}
inline const ::OstProto::StreamConfigList& FileContentMatter::streams() const {
  return streams_ != NULL ? *streams_ : *default_instance_->streams_;
}
inline ::OstProto::StreamConfigList* FileContentMatter::mutable_streams() {
  set_has_streams();
  if (streams_ == NULL) streams_ = new ::OstProto::StreamConfigList;
  return streams_;
}
inline ::OstProto::StreamConfigList* FileContentMatter::release_streams() {
  clear_has_streams();
  ::OstProto::StreamConfigList* temp = streams_;
  streams_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// File

// required bytes magic_value = 2;
inline bool File::has_magic_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void File::set_has_magic_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void File::clear_has_magic_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void File::clear_magic_value() {
  if (magic_value_ != &::google::protobuf::internal::kEmptyString) {
    magic_value_->clear();
  }
  clear_has_magic_value();
}
inline const ::std::string& File::magic_value() const {
  return *magic_value_;
}
inline void File::set_magic_value(const ::std::string& value) {
  set_has_magic_value();
  if (magic_value_ == &::google::protobuf::internal::kEmptyString) {
    magic_value_ = new ::std::string;
  }
  magic_value_->assign(value);
}
inline void File::set_magic_value(const char* value) {
  set_has_magic_value();
  if (magic_value_ == &::google::protobuf::internal::kEmptyString) {
    magic_value_ = new ::std::string;
  }
  magic_value_->assign(value);
}
inline void File::set_magic_value(const void* value, size_t size) {
  set_has_magic_value();
  if (magic_value_ == &::google::protobuf::internal::kEmptyString) {
    magic_value_ = new ::std::string;
  }
  magic_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* File::mutable_magic_value() {
  set_has_magic_value();
  if (magic_value_ == &::google::protobuf::internal::kEmptyString) {
    magic_value_ = new ::std::string;
  }
  return magic_value_;
}
inline ::std::string* File::release_magic_value() {
  clear_has_magic_value();
  if (magic_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = magic_value_;
    magic_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .OstProto.FileMetaData meta_data = 3;
inline bool File::has_meta_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void File::set_has_meta_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void File::clear_has_meta_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void File::clear_meta_data() {
  if (meta_data_ != NULL) meta_data_->::OstProto::FileMetaData::Clear();
  clear_has_meta_data();
}
inline const ::OstProto::FileMetaData& File::meta_data() const {
  return meta_data_ != NULL ? *meta_data_ : *default_instance_->meta_data_;
}
inline ::OstProto::FileMetaData* File::mutable_meta_data() {
  set_has_meta_data();
  if (meta_data_ == NULL) meta_data_ = new ::OstProto::FileMetaData;
  return meta_data_;
}
inline ::OstProto::FileMetaData* File::release_meta_data() {
  clear_has_meta_data();
  ::OstProto::FileMetaData* temp = meta_data_;
  meta_data_ = NULL;
  return temp;
}

// optional .OstProto.FileContent content_matter = 9;
inline bool File::has_content_matter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void File::set_has_content_matter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void File::clear_has_content_matter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void File::clear_content_matter() {
  if (content_matter_ != NULL) content_matter_->::OstProto::FileContent::Clear();
  clear_has_content_matter();
}
inline const ::OstProto::FileContent& File::content_matter() const {
  return content_matter_ != NULL ? *content_matter_ : *default_instance_->content_matter_;
}
inline ::OstProto::FileContent* File::mutable_content_matter() {
  set_has_content_matter();
  if (content_matter_ == NULL) content_matter_ = new ::OstProto::FileContent;
  return content_matter_;
}
inline ::OstProto::FileContent* File::release_content_matter() {
  clear_has_content_matter();
  ::OstProto::FileContent* temp = content_matter_;
  content_matter_ = NULL;
  return temp;
}

// required fixed32 checksum_value = 15;
inline bool File::has_checksum_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void File::set_has_checksum_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void File::clear_has_checksum_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void File::clear_checksum_value() {
  checksum_value_ = 0u;
  clear_has_checksum_value();
}
inline ::google::protobuf::uint32 File::checksum_value() const {
  return checksum_value_;
}
inline void File::set_checksum_value(::google::protobuf::uint32 value) {
  set_has_checksum_value();
  checksum_value_ = value;
}

// -------------------------------------------------------------------

// FileMagic

// required bytes value = 2;
inline bool FileMagic::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileMagic::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileMagic::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileMagic::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& FileMagic::value() const {
  return *value_;
}
inline void FileMagic::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void FileMagic::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void FileMagic::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FileMagic::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* FileMagic::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// FileMeta

// required .OstProto.FileMetaData data = 3;
inline bool FileMeta::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileMeta::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileMeta::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileMeta::clear_data() {
  if (data_ != NULL) data_->::OstProto::FileMetaData::Clear();
  clear_has_data();
}
inline const ::OstProto::FileMetaData& FileMeta::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::OstProto::FileMetaData* FileMeta::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::OstProto::FileMetaData;
  return data_;
}
inline ::OstProto::FileMetaData* FileMeta::release_data() {
  clear_has_data();
  ::OstProto::FileMetaData* temp = data_;
  data_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// FileContent

// optional .OstProto.FileContentMatter matter = 9;
inline bool FileContent::has_matter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileContent::set_has_matter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileContent::clear_has_matter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileContent::clear_matter() {
  if (matter_ != NULL) matter_->::OstProto::FileContentMatter::Clear();
  clear_has_matter();
}
inline const ::OstProto::FileContentMatter& FileContent::matter() const {
  return matter_ != NULL ? *matter_ : *default_instance_->matter_;
}
inline ::OstProto::FileContentMatter* FileContent::mutable_matter() {
  set_has_matter();
  if (matter_ == NULL) matter_ = new ::OstProto::FileContentMatter;
  return matter_;
}
inline ::OstProto::FileContentMatter* FileContent::release_matter() {
  clear_has_matter();
  ::OstProto::FileContentMatter* temp = matter_;
  matter_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// FileChecksum

// required fixed32 value = 15;
inline bool FileChecksum::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileChecksum::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileChecksum::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileChecksum::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 FileChecksum::value() const {
  return value_;
}
inline void FileChecksum::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< OstProto::FileType>() {
  return OstProto::FileType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fileformat_2eproto__INCLUDED
