// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sample.proto

#ifndef PROTOBUF_sample_2eproto__INCLUDED
#define PROTOBUF_sample_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "protocol.pb.h"
// @@protoc_insertion_point(includes)

namespace OstProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sample_2eproto();
void protobuf_AssignDesc_sample_2eproto();
void protobuf_ShutdownFile_sample_2eproto();

class Sample;

// ===================================================================

class Sample : public ::google::protobuf::Message {
 public:
  Sample();
  virtual ~Sample();
  
  Sample(const Sample& from);
  
  inline Sample& operator=(const Sample& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Sample& default_instance();
  
  void Swap(Sample* other);
  
  // implements Message ----------------------------------------------
  
  Sample* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sample& from);
  void MergeFrom(const Sample& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool is_override_checksum = 1;
  inline bool has_is_override_checksum() const;
  inline void clear_is_override_checksum();
  static const int kIsOverrideChecksumFieldNumber = 1;
  inline bool is_override_checksum() const;
  inline void set_is_override_checksum(bool value);
  
  // optional uint32 ab = 2;
  inline bool has_ab() const;
  inline void clear_ab();
  static const int kAbFieldNumber = 2;
  inline ::google::protobuf::uint32 ab() const;
  inline void set_ab(::google::protobuf::uint32 value);
  
  // optional uint32 payload_length = 3;
  inline bool has_payload_length() const;
  inline void clear_payload_length();
  static const int kPayloadLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 payload_length() const;
  inline void set_payload_length(::google::protobuf::uint32 value);
  
  // optional uint32 checksum = 4;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 4;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);
  
  // optional uint32 x = 5 [default = 1234];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);
  
  // optional uint32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:OstProto.Sample)
 private:
  inline void set_has_is_override_checksum();
  inline void clear_has_is_override_checksum();
  inline void set_has_ab();
  inline void clear_has_ab();
  inline void set_has_payload_length();
  inline void clear_has_payload_length();
  inline void set_has_checksum();
  inline void clear_has_checksum();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_override_checksum_;
  ::google::protobuf::uint32 ab_;
  ::google::protobuf::uint32 payload_length_;
  ::google::protobuf::uint32 checksum_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_sample_2eproto();
  friend void protobuf_AssignDesc_sample_2eproto();
  friend void protobuf_ShutdownFile_sample_2eproto();
  
  void InitAsDefaultInstance();
  static Sample* default_instance_;
};
// ===================================================================

static const int kSampleFieldNumber = 102;
extern ::google::protobuf::internal::ExtensionIdentifier< ::OstProto::Protocol,
    ::google::protobuf::internal::MessageTypeTraits< ::OstProto::Sample >, 11, false >
  sample;

// ===================================================================

// Sample

// optional bool is_override_checksum = 1;
inline bool Sample::has_is_override_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sample::set_has_is_override_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sample::clear_has_is_override_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sample::clear_is_override_checksum() {
  is_override_checksum_ = false;
  clear_has_is_override_checksum();
}
inline bool Sample::is_override_checksum() const {
  return is_override_checksum_;
}
inline void Sample::set_is_override_checksum(bool value) {
  set_has_is_override_checksum();
  is_override_checksum_ = value;
}

// optional uint32 ab = 2;
inline bool Sample::has_ab() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sample::set_has_ab() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sample::clear_has_ab() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sample::clear_ab() {
  ab_ = 0u;
  clear_has_ab();
}
inline ::google::protobuf::uint32 Sample::ab() const {
  return ab_;
}
inline void Sample::set_ab(::google::protobuf::uint32 value) {
  set_has_ab();
  ab_ = value;
}

// optional uint32 payload_length = 3;
inline bool Sample::has_payload_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sample::set_has_payload_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sample::clear_has_payload_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sample::clear_payload_length() {
  payload_length_ = 0u;
  clear_has_payload_length();
}
inline ::google::protobuf::uint32 Sample::payload_length() const {
  return payload_length_;
}
inline void Sample::set_payload_length(::google::protobuf::uint32 value) {
  set_has_payload_length();
  payload_length_ = value;
}

// optional uint32 checksum = 4;
inline bool Sample::has_checksum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sample::set_has_checksum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sample::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sample::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 Sample::checksum() const {
  return checksum_;
}
inline void Sample::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
}

// optional uint32 x = 5 [default = 1234];
inline bool Sample::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Sample::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Sample::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Sample::clear_x() {
  x_ = 1234u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Sample::x() const {
  return x_;
}
inline void Sample::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 6;
inline bool Sample::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Sample::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Sample::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Sample::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Sample::y() const {
  return y_;
}
inline void Sample::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OstProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sample_2eproto__INCLUDED
